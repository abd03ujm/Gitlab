stages:
  - build
  - promote
  - deploy

variables:
  ARTIFACTORY_URL: "https://artifacts.hyattdev.com/artifactory"
  DOCKER_REGISTRY: "docker"
  ARTIFACTORY_API_KEY: $ARTIFACTORY_API_KEY  # Make sure the API key is stored in CI/CD variables
  ARTIFACTORY_LOCATION: "https://docker.hyattdev.com"

# This job runs the promotion pipeline
promote_image:
  stage: promote
  script:
    - |
      function found_existing_image() {
        if [[ -z "$CI_COMMIT_TAG" || "$CI_COMMIT_TAG" == "null" ]]; then
          echo "No valid tag found"
          return 1
        fi
        if [[ "$CI_PROJECT_NAME" == "$CI_COMMIT_TAG" ]]; then
          return 0
        fi
        return 1
      }

      function is_pr() {
        if [[ -z "$CI_MERGE_REQUEST_IID" || "$CI_MERGE_REQUEST_IID" == "null" ]]; then
          return 1
        fi
        return 0
      }

      function copy_image() {
        echo "Copying docker image from ${1}:${2} to ${3}:${4}"
        curl -X POST -u "${ARTIFACTORY_API_KEY}:" \
          -H "Content-Type: application/json" \
          -d "{
                \"targetRepo\" : \"${5}\",
                \"dockerRepository\" : \"${1}/${2}\",
                \"tag\" : \"${3}\",
                \"targetTag\" : \"${4}\",
                \"copy\": \"true\"
              }" \
          "${ARTIFACTORY_URL}/artifactory/api/docker/${6}/v2/promote"
      }

      function promote_tagged_image() {
        echo "Promoting image ${1}/${2}:${3} to ${4}:${5}"
        curl -X POST -u "${ARTIFACTORY_API_KEY}:" \
          -H "Content-Type: application/json" \
          -d "{
                \"targetRepo\" : \"dockerv2-prod\",
                \"dockerRepository\" : \"${1}/${2}\",
                \"tag\" : \"${3}\",
                \"targetTag\" : \"${5}\",
                \"copy\": false
              }" \
          "${ARTIFACTORY_URL}/artifactory/api/docker/${4}/v2/promote"
      }

      if ! is_pr; then
        if ! found_existing_image; then
          promote_tagged_image "$ARTIFACTORY_LOCATION" "$CI_PROJECT_NAME" "$CI_COMMIT_REF_NAME" "dockerv2-local" "$CI_COMMIT_REF_NAME"
        else
          echo "Image already exists in prod, skipping promotion."
        fi
      else
        echo "This is a pull request, skipping promotion."
      fi
  only:
    - master  # Or the branch you want to trigger the promotion on

# Job to build docker images
build:
  stage: build
  script:
    - echo "Building Docker image for project ${CI_PROJECT_NAME}"
    - docker build -t "${CI_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}" .
    - docker push "${CI_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}"

# Deploy to production or stable environment
deploy:
  stage: deploy
  script:
    - echo "Deploying Docker image to production"
    - docker pull "${CI_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}"
    - docker run -d "${CI_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}"
  only:
    - master  # Or the branch that should trigger the deploy
