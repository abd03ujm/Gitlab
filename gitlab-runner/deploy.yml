.image-deploy:
  stage: deploy
  image:
    name: docker.hyattdev.com/docker/poc/base-images/podman:v1  # Use a Debian-based image (or switch to Fedora for better Podman support)
    entrypoint: [""]
  script:
    # Step 1: Parse manifest to extract version details
    - |
      if [ -f "$DIR_STRUCTURE/manifest" ]; then
        SOFTWARE_VERSION=$(awk '/SOFTWARE_VERSION/{print $2}' $DIR_STRUCTURE/manifest)
        ALPINE_VERSION=$(awk '/ALPINE_VERSION/{print $2}' $DIR_STRUCTURE/manifest)
        BUILD_VERSION=$(awk '/BUILD_VERSION/{print $2}' $DIR_STRUCTURE/manifest)
        RUN_TIME=$(awk '/RUN_TIME/{print $2}' $DIR_STRUCTURE/manifest)
        SOFTWARE_TYPE=$(awk '/SOFTWARE_TYPE/{print $2}' $DIR_STRUCTURE/manifest)
        echo "SOFTWARE_VERSION - ${SOFTWARE_VERSION}"
        echo "BUILD_VERSION - ${BUILD_VERSION}" 
      else
        EXIT 1
      fi  
    # - |
    #   echo "Image Taging based on $BUILD_VERSION"
    #   if [ -z "$BUILD_VERSION" ]; then
    #     FINAL_IMAGE="$IMAGE_PATH:${SOFTWARE_VERSION}"
    #     echo "Building image - $FINAL_IMAGE"
    #   else
    #     FINAL_IMAGE="$IMAGE_PATH:${SOFTWARE_VERSION}-${BUILD_VERSION}"
    #     echo "Building image - $FINAL_IMAGE"
    #   fi

    - |
      if [ "$SOFTWARE_TYPE" = "node" ]; then

        echo "Image Taging based on $BUILD_VERSION"
        if [ -z "$BUILD_VERSION" ]; then
          FINAL_IMAGE="$IMAGE_PATH:${SOFTWARE_VERSION}"
          echo "Building image - $FINAL_IMAGE"
        else
          FINAL_IMAGE="$IMAGE_PATH:${SOFTWARE_VERSION}-${BUILD_VERSION}"
          echo "Building image - $FINAL_IMAGE"
        fi
      elif [ "$SOFTWARE_TYPE" = "java" ]; then
        echo "Image Taging based on $RUN_TIME"
        if [ -z "$RUN_TIME" ] && [ -n "$BUILD_VERSION" ]; then
          FINAL_IMAGE="$IMAGE_PATH:${SOFTWARE_VERSION}-${BUILD_VERSION}"
          echo "Building image - $FINAL_IMAGE"
        elif [ -n "$RUN_TIME" ] && [ -z "$BUILD_VERSION" ]; then
          FINAL_IMAGE="$IMAGE_PATH:$RUN_TIME-${SOFTWARE_VERSION}"
          echo "JFROG_if - Building image - $FINAL_IMAGE"  
        else
          FINAL_IMAGE="$IMAGE_PATH:$RUN_TIME-${SOFTWARE_VERSION}-${BUILD_VERSION}"
          echo "Building image - $FINAL_IMAGE"
        fi
      fi
      

    # Step 7: Login to JFrog and optionally push to JFrog registry
    - |

      echo "Podman login exit status: $?"  # Check login status
      echo "$CI_REGISTRY_PASSWORD" | podman login -u "$CI_REGISTRY_USER" --password-stdin reg-gitlab.hyattdev.com:5556
      podman pull ${CI_REGISTRY_IMAGE}:${SOFTWARE_VERSION}-${CI_COMMIT_SHORT_SHA}
      echo "${CI_REGISTRY_IMAGE}:${SOFTWARE_VERSION}-${CI_COMMIT_SHORT_SHA}" "$FINAL_IMAGE"
      podman tag "${CI_REGISTRY_IMAGE}:${SOFTWARE_VERSION}-${CI_COMMIT_SHORT_SHA}" "$FINAL_IMAGE"
      echo "Tagging exit status: $?"

    - |
      echo "Pushing image to JFrog..."
      echo "Logging into JFrog"
      ARTIFACTORY_USER=jenkins_upload
      ARTIFACTORY_TOKEN=$(wget -O- --quiet --no-check-certificate https://svc-cicd-tools.k8.nprd.hyattsys.net/artifactory/token)      
      echo "$ARTIFACTORY_TOKEN" | podman login -u "$ARTIFACTORY_USER" --password-stdin "$ARTIFACTORY_URL"
      podman push "$FINAL_IMAGE"
  rules:
    # Run the deploy job manually if it's the default branch and specific files change
    #- if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - if:  '$CI_COMMIT_REF_NAME == "FT-develop"'
    #- if:  '$CI_COMMIT_REF_NAME == "testing-branch-strategy"'
      changes:
        - "${DIR_STRUCTURE}/manifest"
        - "${DIR_STRUCTURE}/Dockerfile"
      when: manual

    # Never trigger the deploy job for other branches
    - when: never

