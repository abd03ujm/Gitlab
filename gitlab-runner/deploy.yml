.image-deploy:
  stage: deploy
  image: "$PODMAN_IMAGE"
  before_script:
    # Step 0: load entries from MANIFEST_FILE and expose them as variables
    - 'if [ -f "$MANIFEST_FILE" ]; then export $(grep -v "^#" $MANIFEST_FILE | xargs); fi'  

  script:
    # Step 2: Define FINAL_IMAGE and TAG based on SOFTWARE_TYPE
    - |
      if [ -z "$RELEASE_TAG" ]; then
        FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:$RELEASE_TAG"
        echo "Setting image tag to $FINAL_IMAGE"  based on RELEASE_TAG... "
      else
        if [ "$SOFTWARE_TYPE" = "node" ]; then
          echo "Setting image tag based on BUILD_VERSION..."
          if [ -z "$BUILD_VERSION" ]; then
            FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:${SOFTWARE_VERSION}"
            TAG="${SOFTWARE_VERSION}"
          else
            FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:${SOFTWARE_VERSION}-${BUILD_VERSION}"
            TAG="${SOFTWARE_VERSION}-${BUILD_VERSION}"
          fi
        elif [ "$SOFTWARE_TYPE" = "java" ]; then
          echo "Setting image tag based on RUN_TIME..."
          if [ -z "$RUN_TIME" ] && [ -n "$BUILD_VERSION" ]; then
            FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:${SOFTWARE_VERSION}-${BUILD_VERSION}"
            TAG="${SOFTWARE_VERSION}-${BUILD_VERSION}"
          elif [ -n "$RUN_TIME" ] && [ -z "$BUILD_VERSION" ]; then
            FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:$RUN_TIME-${SOFTWARE_VERSION}"
            TAG="$RUN_TIME-${SOFTWARE_VERSION}"
          else
            FINAL_IMAGE="$CI_APPLICATION_REPOSITORY:$RUN_TIME-${SOFTWARE_VERSION}-${BUILD_VERSION}"
            TAG="$RUN_TIME-${SOFTWARE_VERSION}-${BUILD_VERSION}"
          fi
        fi

        echo "FINAL_IMAGE: $FINAL_IMAGE"
        echo "TAG: $TAG"
      fi

    - |
      # promote a docker image to dockerv2-prod
      docker_promote() {
        # $1 - sourcetag, $2 - targetTag, 

        targetRepo=dockerv2-prod
        dockerRepo=$ARTIFACTORY_PROJECT/$PROJECT_NAME
        sourceTag=$1
        targetTag=$2

        # Conversion to JSON
        json_string=$(printf '{
            "targetRepo": "%s",
            "dockerRepository": "%s",
            "tag": "%s",
            "targetTag": "%s",
            "copy": "false"
        }' "$targetRepo" "$dockerRepo" "$sourceTag" "$targetTag" )

        token=$(curl -s https://svc-cicd-tools.k8.nprd.hyattsys.net/artifactory/token)

        curl -s -H "Content-Type: application/json"  \
            -X POST -d "$json_string" \
            -u "$ARTIFACTORY_USER:$token" "https://artifacts.hyattdev.com/artifactory/api/docker/dockerv2-local/v2/promote"
      }
      docker_promote "$RELEASE_TAG" "$RELEASE_TAG"

    # Step 4: Pull and Promote Image


  rules:
    - if: '$CI_COMMIT_REF_NAME == "FT-develop"'
      changes:
        - "${DIR_STRUCTURE}/*"
      when: manual
    - when: never
